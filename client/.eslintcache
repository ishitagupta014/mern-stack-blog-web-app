[{"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\index.js":"1","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\App.js":"2","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\reportWebVitals.js":"3","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Home.js":"4","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\UpdateName.js":"5","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Dashboard.js":"6","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Navbar.js":"7","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\EditImage.js":"8","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Edit.js":"9","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\NotFound.js":"10","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Create.js":"11","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Details.js":"12","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\ChangePassword.js":"13","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\private\\RouteLinks.js":"14","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\auth\\Register.js":"15","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\private\\PrivateRoute.js":"16","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\auth\\Login.js":"17","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\index.js":"18","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Pagination.js":"19","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Loader.js":"20","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Sidebar.js":"21","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\asyncMethods\\ProfileMethods.js":"22","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\auth\\BgImage.js":"23","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\asyncMethods\\AuthMethods.js":"24","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\asyncMethods\\PostMethods.js":"25","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\types\\ProfileTypes.js":"26","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\types\\UserTypes.js":"27","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\types\\PostTypes.js":"28","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Comments.js":"29","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\reducers\\PostReducer.js":"30","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\reducers\\AuthReducer.js":"31","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\reducers\\ProfileReducer.js":"32"},{"size":473,"mtime":1651340128245,"results":"33","hashOfConfig":"34"},{"size":2000,"mtime":1652299564617,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1651340128302,"results":"36","hashOfConfig":"34"},{"size":2603,"mtime":1652547667282,"results":"37","hashOfConfig":"34"},{"size":2316,"mtime":1652297988650,"results":"38","hashOfConfig":"34"},{"size":3321,"mtime":1652547892653,"results":"39","hashOfConfig":"34"},{"size":1282,"mtime":1656449955739,"results":"40","hashOfConfig":"34"},{"size":2736,"mtime":1652205322932,"results":"41","hashOfConfig":"34"},{"size":3862,"mtime":1652205239825,"results":"42","hashOfConfig":"34"},{"size":471,"mtime":1651387155592,"results":"43","hashOfConfig":"34"},{"size":5804,"mtime":1652289913000,"results":"44","hashOfConfig":"34"},{"size":2726,"mtime":1652550829240,"results":"45","hashOfConfig":"34"},{"size":2815,"mtime":1652303692898,"results":"46","hashOfConfig":"34"},{"size":481,"mtime":1651394177753,"results":"47","hashOfConfig":"34"},{"size":2983,"mtime":1651409613561,"results":"48","hashOfConfig":"34"},{"size":359,"mtime":1651384551279,"results":"49","hashOfConfig":"34"},{"size":2341,"mtime":1652303242039,"results":"50","hashOfConfig":"34"},{"size":688,"mtime":1651340129491,"results":"51","hashOfConfig":"34"},{"size":1168,"mtime":1651340128703,"results":"52","hashOfConfig":"34"},{"size":161,"mtime":1651340128610,"results":"53","hashOfConfig":"34"},{"size":413,"mtime":1652122235062,"results":"54","hashOfConfig":"34"},{"size":1660,"mtime":1651340129609,"results":"55","hashOfConfig":"34"},{"size":92,"mtime":1651340128806,"results":"56","hashOfConfig":"34"},{"size":1470,"mtime":1652301344546,"results":"57","hashOfConfig":"34"},{"size":5119,"mtime":1652550454297,"results":"58","hashOfConfig":"34"},{"size":116,"mtime":1651340129751,"results":"59","hashOfConfig":"34"},{"size":463,"mtime":1652301547151,"results":"60","hashOfConfig":"34"},{"size":920,"mtime":1651340129720,"results":"61","hashOfConfig":"34"},{"size":670,"mtime":1652550428648,"results":"62","hashOfConfig":"34"},{"size":2751,"mtime":1652550481584,"results":"63","hashOfConfig":"34"},{"size":2042,"mtime":1652301636401,"results":"64","hashOfConfig":"34"},{"size":455,"mtime":1652298240743,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ipuxu9",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\index.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\App.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\reportWebVitals.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Home.js",["148","149"],"import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { htmlToText } from 'html-to-text';\nimport { homePosts } from '../store/asyncMethods/PostMethods';\nimport Loader from './Loader';\nimport Pagination from './Pagination';\nconst Home = () => {\n\tconst PF = \"http://localhost:5000/images/\";\n\tlet { page } = useParams();\n\tif (page === undefined) {\n\t\tpage = 1;\n\t}\n\tconst { loading } = useSelector((state) => state.PostReducer);\n\tconst { posts, count, perPage } = useSelector((state) => state.FetchPosts);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(homePosts(page));\n\t}, [page]);\n\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>Web articles</title>\n\t\t\t\t<meta\n\t\t\t\t\tname='description'\n\t\t\t\t\tcontent='Learn HTML, CSS, JavaScript, React, Vue, Flutter etc'\n\t\t\t\t/>\n\t\t\t</Helmet>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row mt-100' style={{ marginBottom: '30px' }}>\n\t\t\t\t\t<div className='col-9 home'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\tposts.length > 0 ? (\n\t\t\t\t\t\t\t\tposts.map((post) => (\n\t\t\t\t\t\t\t\t\t<div className='row post-style' key={post._id}>\n\t\t\t\t\t\t\t\t\t\t<div className='col-8'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='post'>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__header'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__header__avator'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{post.userName[0]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__header__user'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{post.userName}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(post.updatedAt).format('MMM Do YY')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__body'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h1 className='post__body__title'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/details/${post._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{post.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='post__body__details'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{htmlToText(post.body.slice(0, 300))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='col-4'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='post__image'>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={`http://localhost:5000/images/${post.image}`} alt={post.image} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'No posts'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-9'>\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tpath='home'\n\t\t\t\t\t\t\tpage={page}\n\t\t\t\t\t\t\tperPage={perPage}\n\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default Home;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\UpdateName.js",["150","151","152","153"],"import Helmet from 'react-helmet';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {useNavigate} from 'react-router-dom';\nimport { updateNameAction } from '../store/asyncMethods/ProfileMethods';\nimport { RESET_PROFILE_ERRORS } from '../store/types/ProfileTypes';\nimport Sidebar from './Sidebar';\n\nconst UpdateName = () => {\n\tlet navigate = useNavigate();\n\tconst [userName, setUserName] = useState('');\n\tconst {\n\t\tuser: { name, userId },\n\t} = useSelector((user) => user.AuthReducer);\n\tconsole.log(\"User \"+name)\n\tconst { loading, redirect } = useSelector((state) => state.PostReducer);\n\tconst { updateErrors } = useSelector((state) => state.updateName);\n\tconst dispatch = useDispatch();\n\tconst updateNameMethod = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(updateNameAction({ name: userName, id: userId }));\n\t};\n\tuseEffect(() => {\n\t\tsetUserName(name);\n\t}, []);\n\tuseEffect(() => {\n\t\tif (updateErrors.length !== 0) {\n\t\t\tupdateErrors.map((error) => toast.error(error.msg));\n\t\t\tdispatch({ type: RESET_PROFILE_ERRORS });\n\t\t}\n\t}, [updateErrors]);\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tnavigate('/dashboard');\n\t\t}\n\t}, [redirect]);\n\treturn (\n\t\t<div className='container mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Update Name</title>\n\t\t\t\t<meta name='description' content='update the user name' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='row ml-minus-15 mr-minus-15'>\n\t\t\t\t<div className='col-3 p-15'>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t</div>\n\t\t\t\t<div className='col-9 p-15'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<h3 className='card__h3'>Update Name</h3>\n\t\t\t\t\t\t<form onSubmit={updateNameMethod}>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname=''\n\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\tplaceholder='Name...'\n\t\t\t\t\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t\t\t\t\t\tvalue={userName}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tvalue='Update Name'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default UpdateName;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Dashboard.js",["154","155"],"import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n\tREDIRECT_FALSE,\n\tREMOVE_MESSAGE,\n\tSET_LOADER,\n\tCLOSE_LOADER,\n\tSET_MESSAGE,\n} from '../store/types/PostTypes';\nimport { fetchPosts } from '../store/asyncMethods/PostMethods';\nimport { BsPencil, BsArchive, BsImage } from 'react-icons/bs';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Loader from './Loader';\nimport Sidebar from './Sidebar';\nimport Pagination from './Pagination';\nconst Dashboard = () => {\n\tconst { redirect, message, loading } = useSelector(\n\t\t(state) => state.PostReducer\n\t);\n\tconst {\n\t\tuser: { userId },\n\t\ttoken,\n\t} = useSelector((state) => state.AuthReducer);\n\tconst { posts, count, perPage } = useSelector((state) => state.FetchPosts);\n\tlet { page } = useParams();\n\tif (page === undefined) {\n\t\tpage = 1;\n\t}\n\tconst dispatch = useDispatch();\n\tconst deletePost = async (id) => {\n\t\tconst confirm = window.confirm('Are you really want to delete this post?');\n\t\tif (confirm) {\n\t\t\tdispatch({ type: SET_LOADER });\n\t\t\ttry {\n\t\t\t\tconst config = {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tconst {\n\t\t\t\t\tdata: { msg },\n\t\t\t\t} = await axios.get(`/delete/${id}`, config);\n\t\t\t\tdispatch(fetchPosts(userId, page));\n\t\t\t\tdispatch({ type: SET_MESSAGE, payload: msg });\n\t\t\t} catch (error) {\n\t\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tdispatch({ type: REDIRECT_FALSE });\n\t\t}\n\t\tif (message) {\n\t\t\ttoast.success(message);\n\t\t\tdispatch({ type: REMOVE_MESSAGE });\n\t\t}\n\t}, [message]);\n\tuseEffect(() => {\n\t\tdispatch(fetchPosts(userId, page));\n\t}, [page]);\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>User Dashboard</title>\n\t\t\t\t<meta name='description' content='User Dashboard' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-center'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='container mt-100'>\n\t\t\t\t<div className='row ml-minus-15 mr-minus-15'>\n\t\t\t\t\t<div className='col-3 p-15'>\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t</div>\n\t\t\t\t   \n\t\t\t\t\t<div className='col-9 p-15'>\n\t\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t\tposts.length > 0 ? (\n\t\t\t\t\t\t\t\tposts.map((post) => (\n\t\t\t\t\t\t\t\t\t<div className='dashboard__posts' key={post._id}>\n\t\t\t\t\t\t\t\t\t\t<div className='dashboard__posts__title'>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/details/${post._id}`}>{post.title}</Link>\n\t\t\t\t\t\t\t\t\t\t\t<span>Published {moment(post.updatedAt).fromNow()}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='dashboard__posts__links'>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/updateImage/${post._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<BsImage className='icon' />\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/edit/${post._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<BsPencil className='icon' />\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<BsArchive\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deletePost(post._id)}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='icon'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'You dont have any post'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Loader />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tpath='dashboard'\n\t\t\t\t\t\t\tpage={page}\n\t\t\t\t\t\t\tperPage={perPage}\n\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default Dashboard;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Navbar.js",["156"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOGOUT } from '../store/types/UserTypes';\nimport { useEffect,useState} from 'react';\nimport logo from '../images/logo.png'\n\nconst Navbar = () => {\n\tconst { user } = useSelector((state) => state.AuthReducer);\n\tconst [val,setVal]=useState('');\n\tconst dispatch = useDispatch();\n\tconst logout = () => {\n\t\tlocalStorage.removeItem('myToken');\n\t\tdispatch({ type: LOGOUT });\n\t};\n\tuseEffect(()=>{\n          setVal(user)\n\t},[user])\n\tconst Links = user ? (\n\t\t<div className='navbar__right'>\n\t\t\t<li>\n\t\t\t\t<Link to='/create'><span>Create Post</span></Link>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<Link to='/dashboard/1'><span>{user.name}</span></Link>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<span onClick={logout}>Logout</span>\n\t\t\t</li>\n\t\t</div>\n\t) : (\n\t\t<div className='navbar__right'>\n\t\t\t<li>\n\t\t\t\t<Link to='/login'><span>Login</span></Link>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<Link to='/register'><span>Register</span></Link>\n\t\t\t</li>\n\t\t</div>\n\t);\n\treturn (\n\t\t<nav className='navbar'>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='navbar__row'>\n\t\t\t\t\t<div className='navbar__left'>\n\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t<img src={logo} alt='' />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t{Links}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\nexport default Navbar;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\EditImage.js",["157","158","159"],"import { Helmet } from 'react-helmet';\nimport { useState, useEffect } from 'react';\nimport { useParams,useNavigate} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { updateImageAction } from '../store/asyncMethods/PostMethods';\nimport { RESET_UPDATE_IMAGE_ERRORS } from '../store/types/PostTypes';\nconst EditImage = () => {\n\tconst { id } = useParams();\n\tlet navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\tconst { updateImageErrors } = useSelector((state) => state.UpdateImage);\n\tconst { redirect } = useSelector((state) => state.PostReducer);\n\tconst [state, setState] = useState({\n\t\timage: '',\n\t\timagePreview: '',\n\t\timageName: 'Choose image',\n\t});\n\tconst fileHandle = (e) => {\n\t\tif (e.target.files.length !== 0) {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onloadend = () => {\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\timagePreview: reader.result,\n\t\t\t\t\timage: e.target.files[0],\n\t\t\t\t\timageName: e.target.files[0].name,\n\t\t\t\t});\n\t\t\t};\n\t\t\treader.readAsDataURL(e.target.files[0]);\n\t\t}\n\t};\n\tconst updateImage = (e) => {\n\t\te.preventDefault();\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('image', state.image);\n\t\tdispatch(updateImageAction(formData));\n\t};\n\tuseEffect(() => {\n\t\tif (updateImageErrors.length !== 0) {\n\t\t\tupdateImageErrors.map((error) => toast.error(error.msg));\n\t\t\tdispatch({ type: RESET_UPDATE_IMAGE_ERRORS });\n\t\t}\n\t}, [updateImageErrors]);\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tnavigate(\"/dashboard\")\n\t\t}\n\t}, [redirect]);\n\treturn (\n\t\t<div className='container mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Update image</title>\n\t\t\t\t<meta name='description' content='Update image' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-6'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<h3 className='card__h3'>Update Post Image</h3>\n\t\t\t\t\t\t<form onSubmit={updateImage}>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<label htmlFor='image' className='image__label'>\n\t\t\t\t\t\t\t\t\t{state.imageName}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\t\tid='image'\n\t\t\t\t\t\t\t\t\tonChange={fileHandle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<div className='imagePreivew'>\n\t\t\t\t\t\t\t\t\t{state.imagePreview ? <img src={state.imagePreview} /> : ''}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tvalue='Update image'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default EditImage;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Edit.js",["160","161","162","163"],"import { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { useParams,useNavigate} from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPost, updateAction } from '../store/asyncMethods/PostMethods';\nimport {\n\tPOST_RESET,\n\tRESET_UPDATE,\n\tRESET_UPDATE_ERRORS,\n} from '../store/types/PostTypes';\nimport Loader from './Loader';\nconst Edit = () => {\n//\tconst { push } = useNavigate();\n     let navigate = useNavigate();\n\tconst { id } = useParams();\n\tconst [value, setValue] = useState('');\n\tconst [state, setState] = useState({\n\t\ttitle: '',\n\t\tdescription: '',\n\t});\n\tconst dispatch = useDispatch();\n\tconst { loading, redirect } = useSelector((state) => state.PostReducer);\n\tconst { post, postStatus } = useSelector((state) => state.FetchPost);\n\tconst { editErrors } = useSelector((state) => state.UpdatePost);\n\tuseEffect(() => {\n\t\tif (postStatus) {\n\t\t\tsetState({\n\t\t\t\ttitle: post.title,\n\t\t\t\tdescription: post.description,\n\t\t\t});\n\t\t\tsetValue(post.body);\n\t\t\tdispatch({ type: POST_RESET });\n\t\t} else {\n\t\t\tdispatch(fetchPost(id));\n\t\t}\n\t}, [post]);\n\tconst updatePost = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(\n\t\t\tupdateAction({\n\t\t\t\ttitle: state.title,\n\t\t\t\tbody: value,\n\t\t\t\tdescription: state.description,\n\t\t\t\tid: post._id,\n\t\t\t})\n\t\t);\n\t};\n\tuseEffect(() => {\n\t\tif (editErrors.length !== 0) {\n\t\t\teditErrors.map((error) => toast.error(error.msg));\n\t\t\tdispatch({ type: RESET_UPDATE_ERRORS });\n\t\t}\n\t}, [editErrors]);\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\t//window.location.replace('/dashboard')\n\t\t\tnavigate(\"/dashboard\")\n\t\t}\n\t}, [redirect]);\n\treturn !loading ? (\n\t\t<div className='mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Edit post</title>\n\t\t\t\t<meta name='description' content='update post' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-6'>\n\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t<h3 className='card__h3'>Edit post</h3>\n\t\t\t\t\t\t\t<form onSubmit={updatePost}>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='title'>Post title</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\t\t\t\tid='title'\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post title'\n\t\t\t\t\t\t\t\t\t\tvalue={state.title}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetState({ ...state, title: e.target.value })\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='body'>Post body</label>\n\t\t\t\t\t\t\t\t\t<ReactQuill\n\t\t\t\t\t\t\t\t\t\ttheme='snow'\n\t\t\t\t\t\t\t\t\t\tid='body'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Post body...'\n\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\tonChange={setValue}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Meta Description</label>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\t\trows='10'\n\t\t\t\t\t\t\t\t\t\tdefaultValue={state.description}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetState({ ...state, description: e.target.value })\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonKeyUp={(e) =>\n\t\t\t\t\t\t\t\t\t\t\tsetState({ ...state, description: e.target.value })\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='meta description...'\n\t\t\t\t\t\t\t\t\t\tmaxLength='150'></textarea>\n\t\t\t\t\t\t\t\t\t<p className='length'>\n\t\t\t\t\t\t\t\t\t\t{state.description ? state.description.length : 0}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tvalue='Edit'\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<Loader />\n\t);\n};\nexport default Edit;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\NotFound.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Create.js",["164","165"],"import { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { createAction } from '../store/asyncMethods/PostMethods';\nimport Loader from './Loader';\nimport { useNavigate } from 'react-router';\nconst Create = (props) => {\n\tlet navigate = useNavigate();\n\tconst { createErrors, redirect, loading } = useSelector(\n\t\t(state) => state.PostReducer\n\t);\n\tconst [currentImage, setCurrentImage] = useState('Choose image');\n\tconst [imagePreview, setImagePreview] = useState('');\n\tconst dispatch = useDispatch();\n\t// const {\n\t// \tuser: {userId, name },\n\t// } = useSelector((state) => state.AuthReducer);\n\tconst {user} = useSelector((state)=>state.AuthReducer);\n\tconst {userId,name} = user;\n\tconst fileHandle = (e) => {\n\t\t\n\t\tif (e.target.files.length !== 0) {\n\t\t\tsetCurrentImage(e.target.files[0].name);\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\t[e.target.name]: e.target.files[0],\n\t\t\t});\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onloadend = () => {\n\t\t\t\t//console.log(reader.result);\n\t\t\t\tsetImagePreview(reader.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(e.target.files[0]);\n\t\t}\n\t};\n\tconst [state, setState] = useState({\n\t\ttitle: '',\n\t\tdescription: '',\n\t\timage: '',\n\t});\n\tconst handleDescription = (e) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\tconst [slug, setSlug] = useState('');\n\tconst [slugButton, setSlugButton] = useState(false);\n\tconst slugHandle = (e) => {\n\t\tsetSlugButton(true);\n\t\tsetSlug(e.target.value);\n\t};\n\tconst handleURL = (e) => {\n\t\te.preventDefault();\n\t\tsetSlug(slug.trim().split(' ').join('-'));\n\t};\n\tconst handleInput = (e) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t\tconst createSlug = e.target.value.trim().split(' ').join('-');\n\t\tsetSlug(createSlug);\n\t};\n\tconst [value, setValue] = useState('');\n\tconst createPost = (e) => {\n\t\te.preventDefault();\n\t\tconst { title, description, image } = state;\n\t\tconst formData = new FormData();\n\t\tformData.append('title', title);\n\t\tformData.append('body', value);\n\t\tformData.append('image', image);\n\t\tformData.append('description', description);\n\t\tformData.append('slug', slug);\n\t//\tconsole.log(userId+\" \"+name)\n\t\tformData.append('name', name);\n\t\tformData.append('id', userId);\n\t\tdispatch(createAction(formData));\n\t};\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tnavigate('/dashboard')\n\t\t}\n\t\tif (createErrors.length !== 0) {\n\t\t\tcreateErrors.map((err) => toast.error(err.msg));\n\t\t}\n\t}, [createErrors, redirect]);\n\n\treturn (\n\t\t<div className='create mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Create new post</title>\n\t\t\t\t<meta name='description' content='Create a new post' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t{!loading ? (\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<form onSubmit={createPost}>\n\t\t\t\t\t\t<div className='row ml-minus-15 mr-minus-15'>\n\t\t\t\t\t\t\t<div className='col-6 p-15'>\n\t\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t\t<h3 className='card__h3'>Create a new post</h3>\n                            \n\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='title'>Post Title</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\t\t\t\t\tid='title'\n\t\t\t\t\t\t\t\t\t\t\tvalue={state.title}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Post title...'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='image' className='image__label'>\n\t\t\t\t\t\t\t\t\t\t\t{currentImage}\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\t\t\t\tid='image'\n\t\t\t\t\t\t\t\t\t\t\tonChange={fileHandle}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='body'>Post body</label>\n\t\t\t\t\t\t\t\t\t\t<ReactQuill\n\t\t\t\t\t\t\t\t\t\t\ttheme='snow'\n\t\t\t\t\t\t\t\t\t\t\tid='body'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Post body...'\n\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\tonChange={setValue}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='description'>Meta Description</label>\n\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\t\t\t\tcols='30'\n\t\t\t\t\t\t\t\t\t\t\trows='10'\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={state.description}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleDescription}\n\t\t\n\t\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Meta description...'\n\t\t\t\t\t\t\t\t\t\t\tmaxLength='150'></textarea>\n\t\t\t\t\t\t\t\t\t\t<p className='length'>\n\t\t\t\t\t\t\t\t\t\t\t{state.description ? state.description.length : 0}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='col-6 p-15'>\n\t\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='slug'>Post URL</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tname='slug'\n\t\t\t\t\t\t\t\t\t\t\tid='slug'\n\t\t\t\t\t\t\t\t\t\t\tvalue={slug}\n\t\t\t\t\t\t\t\t\t\t\tonChange={slugHandle}\n\t\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Post URL...'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t{slugButton ? (\n\t\t\t\t\t\t\t\t\t\t\t<button class='btn btn-default' onClick={handleURL}>\n\t\t\t\t\t\t\t\t\t\t\t\tUpdate Slug\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t<div className='imagePreivew'>\n\t\t\t\t\t\t\t\t\t\t\t{imagePreview ? <img src={imagePreview} /> : ''}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\tvalue='Create post'\n\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<Loader />\n\t\t\t)}\n\t\t</div>\n\t);\n};\nexport default Create;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Details.js",["166"],"import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { htmlToText } from 'html-to-text';\nimport Helmet from 'react-helmet';\nimport { postDetails, postComment } from '../store/asyncMethods/PostMethods';\nimport Loader from './Loader';\nimport Comments from './Comments';\nconst Details = () => {\n\tconst { id } = useParams();\n\tconst PF = \"http://localhost:5000/images/\";\n\t//console.log(id)\n\tconst [comment, setComment] = useState('');\n\tconst { user } = useSelector((state) => state.AuthReducer);\n\tconst { loading, details, comments } = useSelector(\n\t\t(state) => state.PostReducer\n\t);\n\tconst dispatch = useDispatch();\n\tconst addComment = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(postComment({ id: details._id, comment, userName: user.name }));\n\t\tsetComment('');\n\t\tdispatch(postDetails(id));\n\t};\n\tuseEffect(() => {\n\t\t//console.log(\"Details\"+details)\n\t\tdispatch(postDetails(id));\n\t}, [id]);\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className='row mt-100'>\n\t\t\t\t<div className='col-8'>\n\t\t\t\t\t{!loading ? (\n\t\t\t\t\t\t<div className='post__details'>\n\t\t\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t\t\t<title>{details.title}</title>\n\t\t\t\t\t\t\t</Helmet>\n\t\t\t\t\t\t\t<div className='post__header'>\n\t\t\t\t\t\t\t\t<div className='post__header__avator'>\n\t\t\t\t\t\t\t\t\t{details.userName ? details.userName[0] : ''}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='post__header__user'>\n\t\t\t\t\t\t\t\t\t<span>{details.userName}</span>\n\t\t\t\t\t\t\t\t\t<span>{moment(details.updatedAt).format('MMM Do YY')}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='post__body'>\n\t\t\t\t\t\t\t\t<h1 className='post__body__title'>{details.title}</h1>\n\t\t\t\t\t\t\t\t<div className='post__body__details'>\n\t\t\t\t\t\t\t\t\t{htmlToText(details.body)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='post__body__image'>\n\t\t\t\t\t\t\t\t\t<img src={PF+details.image} alt={details.image} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{user ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className='post__comment'>\n\t\t\t\t\t\t\t\t\t\t<form onSubmit={addComment}>\n\t\t\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Write a comment...'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setComment(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={comment}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue='Post comment'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-default'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Comments comments={comments} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Loader />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default Details;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\ChangePassword.js",["167","168"],"import { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar';\nimport Helmet from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { updatePasswordAction } from '../store/asyncMethods/ProfileMethods';\nimport { RESET_PROFILE_ERRORS } from '../store/types/ProfileTypes';\nimport Loader from './Loader';\nconst ChangePassword = () => {\n\tlet navigate = useNavigate();\n\tconst [state, setState] = useState({\n\t\tcurrent: '',\n\t\tnewPassword: '',\n\t\tuserId: null,\n\t});\n\tconst dispatch = useDispatch();\n\tconst { loading, redirect } = useSelector((state) => state.PostReducer);\n\tconst { updateErrors } = useSelector((state) => state.updateName);\n\tconst {\n\t\tuser: {userId },\n\t} = useSelector((state) => state.AuthReducer);\n\n\tconst updatePassword = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(\n\t\t\tupdatePasswordAction({\n\t\t\t\tcurrent: state.current,\n\t\t\t\tnewPassword: state.newPassword,\n\t\t\t\tuserId: userId,\n\t\t\t})\n\t\t);\n\t};\n\tuseEffect(() => {\n\t\tif (updateErrors.length !== 0) {\n\t\t\tupdateErrors.map((error) => toast.error(error.msg));\n\t\t\tdispatch({ type: RESET_PROFILE_ERRORS });\n\t\t}\n\t}, [updateErrors]);\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\tnavigate('/dashboard');\n\t\t}\n\t}, [redirect]);\n\treturn !loading ? (\n\t\t<div className='container mt-100'>\n\t\t\t<Helmet>\n\t\t\t\t<title>Update Password</title>\n\t\t\t\t<meta name='description' content='update the user password' />\n\t\t\t</Helmet>\n\t\t\t<Toaster\n\t\t\t\tposition='top-right'\n\t\t\t\treverseOrder={false}\n\t\t\t\ttoastOptions={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className='row ml-minus-15 mr-minus-15'>\n\t\t\t\t<div className='col-3 p-15'>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t</div>\n\t\t\t\t<div className='col-9 p-15'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<h3 className='card__h3'>Change Password</h3>\n\t\t\t\t\t\t<form onSubmit={updatePassword}>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tname=''\n\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\tplaceholder='Current Password'\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetState({ ...state, current: e.target.value })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvalue={state.current}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tname=''\n\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\tplaceholder='New Password'\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetState({ ...state, newPassword: e.target.value })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvalue={state.newPassword}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tvalue='Update Password'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t) : (\n\t\t<Loader />\n\t);\n};\nexport default ChangePassword;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\private\\RouteLinks.js",["169","170"],"import { Children } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Navigate} from 'react-router-dom';\n\nconst RouteLinks = ({children}) => {\n\tconst { user } = useSelector((state) => state.AuthReducer);\n\tconsole.log(children);\n\t//console.log(props)\n\tconsole.log(user);\n\t//console.log(props.element)\n\treturn user ? (\n\t\t// <Redirect to='/dashboard' />\n\t\t<Navigate to=\"/dashboard\"/>\n\t) : (\n\t\t// <Route {...props}/>\n\t\tchildren\n\t);\n};\nexport default RouteLinks;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\auth\\Register.js",["171"],"import { useState, useEffect } from 'react';\nimport BgImage from './BgImage';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { postRegister } from '../../store/asyncMethods/AuthMethods';\nconst Register = (props) => {\n\tconst [state, setState] = useState({\n\t\tname: '',\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\n\tconst { loading, registerErrors, user,redirect} = useSelector(\n\t\t(state) => state.AuthReducer\n\t);\n\tuseEffect(() => {\n\t\tif (redirect) {\n\t\t\twindow.location.href='/login'\n\t\t}\n\t}, [redirect]);\n\tconst dispatch = useDispatch();\n\tconst handleInputs = (e) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\tconst userRegister = async (e) => {\n\t\te.preventDefault();\n\t\t// const config = {\n\t\t// \theaders:{\n\t\t// \t\t'Content-Type' : 'application/json'\n\t\t// \t}\n\t\t// }\n\t\t// try{\n\t\t// const result = await axios.post('/register',state,config)\n\t\t//   console.log(result);\n\t\t// }\n\t\t// catch(error){\n        //    console.log(error);\n\t\t// }\n\t\t\n\t\tdispatch(postRegister(state));\n\t};\n\tuseEffect(() => {\n\t\tif (registerErrors?.length > 0) {\n\t\t\tregisterErrors.map((error) => toast.error(error.msg));\n\t\t}\n\t}, [registerErrors, user]);\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>User Register</title>\n\t\t\t\t<meta name='description' content='User register form' />\n\t\t\t</Helmet>\n\t\t\t<div className='row mt-80'>\n\t\t\t\t<div className='col-8'>\n\t\t\t\t\t<BgImage />\n\t\t\t\t\t<Toaster\n\t\t\t\t\t\tposition='top-right'\n\t\t\t\t\t\treverseOrder={false}\n\t\t\t\t\t\ttoastOptions={{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-4'>\n\t\t\t\t\t<div className='account'>\n\t\t\t\t\t\t<div className='account__section'>\n\t\t\t\t\t\t\t<form onSubmit={userRegister}>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<h3 className='form-heading'>Register</h3>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Name'\n\t\t\t\t\t\t\t\t\t\tvalue={state.name}\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputs}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Email'\n\t\t\t\t\t\t\t\t\t\tvalue={state.email}\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputs}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Create Password'\n\t\t\t\t\t\t\t\t\t\tvalue={state.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputs}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t\t\tvalue={loading ? '...' : 'Register'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default Register;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\private\\PrivateRoute.js",["172"],"import { useSelector } from 'react-redux';\nimport { Route, Navigate} from 'react-router-dom';\nconst PrivateRoute = ({children}) => {\n\tconst { user } = useSelector((state) => state.AuthReducer);\n\t//console.log(props.element)\n\treturn user ? (\n\t\tchildren\n\t) : (\n\t\t// <Redirect to='/login' />\n\t\t<Navigate to=\"/login\" replace/>\n\t);\n};\nexport default PrivateRoute;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\auth\\Login.js",["173"],"import { useState, useEffect } from 'react';\nimport BgImage from './BgImage';\nimport { Helmet } from 'react-helmet';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { postLogin } from '../../store/asyncMethods/AuthMethods';\nimport { REMOVE_LOGIN_ERRORS } from '../../store/types/UserTypes';\nconst Login = () => {\n\tconst dispatch = useDispatch();\n\tconst { loginErrors, loading } = useSelector((state) => state.AuthReducer);\n\tconst [state, setState] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\tconst handleInputs = (e) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\tconst userLogin = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(postLogin(state));\n\t};\n\tuseEffect(() => {\n\t\tif (loginErrors.length > 0) {\n\t\t\tloginErrors.map((error) => toast.error(error.msg));\n\t\t\tdispatch({type:REMOVE_LOGIN_ERRORS})\n\t\t}\n\t}, [loginErrors]);\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>User Login</title>\n\t\t\t\t<meta name='description' content='User login form' />\n\t\t\t</Helmet>\n\t\t\n\t\t\t<div className='row mt-80'>\n\t\t\t\t<div className='col-8'>\n\t\t\t\t\t<BgImage />\n\t\t\t\t\t<Toaster\n\t\t\t\t\t\tposition='top-right'\n\t\t\t\t\t\treverseOrder={false}\n\t\t\t\t\t\ttoastOptions={{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tfontSize: '14px',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-4'>\n\t\t\t\t\t<div className='account'>\n\t\t\t\t\t\t<div className='account__section'>\n\t\t\t\t\t\t\t<form onSubmit={userLogin}>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<h3 className='form-heading'>Login</h3>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tvalue={state.email}\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputs}\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Email'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\tvalue={state.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleInputs}\n\t\t\t\t\t\t\t\t\t\tclassName='group__control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Create Password'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='group'>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tclassName='btn btn-default btn-block'\n\t\t\t\t\t\t\t\t\t\tvalue={loading ? '...' : 'Login'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default Login;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\index.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Pagination.js",["174"],"import { Link } from 'react-router-dom';\nimport { BsChevronDoubleRight, BsChevronDoubleLeft } from 'react-icons/bs';\nconst Pagination = ({ path, count, page, perPage }) => {\n\tlet totalPages = Math.ceil(count / perPage);\n\tlet startLoop = page;\n\tlet diff = totalPages - page;\n\tif (diff <= 3) {\n\t\tstartLoop = totalPages - 3;\n\t}\n\tlet endLoop = startLoop + 3;\n\tif (startLoop <= 0) {\n\t\tstartLoop = 1;\n\t}\n\tconst links = () => {\n\t\tconst store = [];\n\n\t\tfor (let i = startLoop; i <= endLoop; i++) {\n\t\t\tstore.push(\n\t\t\t\t<li key={i} className={i == page ? 'active' : ''}>\n\t\t\t\t\t<Link to={`/${path}/${i}`}>{i}</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn store;\n\t};\n\tconst next = () => {\n\t\tif (page < totalPages) {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`/${path}/${parseInt(page) + 1}`}>\n\t\t\t\t\t\t<BsChevronDoubleRight />\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t};\n\tconst prev = () => {\n\t\tif (page > 1) {\n\t\t\treturn (\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`/${path}/${parseInt(page - 1)}`}>\n\t\t\t\t\t\t<BsChevronDoubleLeft />\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn totalPages && count > 3 ? (\n\t\t<div className='pagination'>\n\t\t\t{prev()}\n\t\t\t{links()}\n\t\t\t{next()}\n\t\t</div>\n\t) : (\n\t\t''\n\t);\n};\nexport default Pagination;\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Loader.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Sidebar.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\asyncMethods\\ProfileMethods.js",["175"],"import axios from 'axios';\nimport {\n\tSET_LOADER,\n\tCLOSE_LOADER,\n\tREDIRECT_TRUE,\n\tSET_MESSAGE,\n} from '../types/PostTypes';\nimport {\n\tRESET_PROFILE_ERRORS,\n\tSET_PROFILE_ERRORS,\n} from '../types/ProfileTypes';\nimport { SET_TOKEN } from '../types/UserTypes';\nexport const updateNameAction = (user) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/updateName', user, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\n\t\t\tlocalStorage.setItem('myToken', data.token);\n\t\t\tdispatch({ type: SET_TOKEN, payload: data.token });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(error.response.data.errors);\n\t\t\tdispatch({\n\t\t\t\ttype: SET_PROFILE_ERRORS,\n\t\t\t\tpayload: error.response.data.errors,\n\t\t\t});\n\t\t}\n\t};\n};\nexport const updatePasswordAction = (userData) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/updatePassword', userData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({\n\t\t\t\ttype: SET_PROFILE_ERRORS,\n\t\t\t\tpayload: error.response.data.errors,\n\t\t\t});\n\t\t}\n\t};\n};\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\auth\\BgImage.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\asyncMethods\\AuthMethods.js",["176"],"import axios from 'axios';\nimport {\n\tSET_LOADER,\n\tCLOSE_LOADER,\n\tSET_TOKEN,\n\tREGISTER_ERRORS,\n\tLOGIN_ERRORS,\n} from '../types/UserTypes';\nimport { REDIRECT_TRUE } from '../types/UserTypes';\n\n// Behind this function thunk-middleware will work\nexport const postRegister = (state) => {\n\treturn async (dispatch) => {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/register', state, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({type:REDIRECT_TRUE})\n\t\t//\tlocalStorage.setItem('myToken', data.token);\n\t\t\t//dispatch({ type: SET_TOKEN, payload: data.token });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({\n\t\t\t\ttype: REGISTER_ERRORS,\n\t\t\t\tpayload: error.response.data.errors,\n\t\t\t});\n\t\t}\n\t};\n};\nexport const postLogin = (state) => {\n\treturn async (dispatch) => {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t};\n\t\ttry {\n\t\t\tdispatch({ type: SET_LOADER });\n\t\t\tconsole.log(state);\n\t\t\tconst { data } = await axios.post('/login', state, config);\n\t\t\tconsole.log(data)\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tlocalStorage.setItem('myToken', data.token);\n\t\t\tdispatch({ type: SET_TOKEN, payload: data.token });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\t//console.log(\"Error\"+error.response.data)\n\t\t\tdispatch({ type: LOGIN_ERRORS, payload: error.response.data.errors });\n\t\t}\n\t};\n};\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\asyncMethods\\PostMethods.js",["177","178","179"],"import axios from 'axios';\nimport {\n\tCREATE_ERRORS,\n\tREMOVE_ERRORS,\n\tSET_LOADER,\n\tCLOSE_LOADER,\n\tREDIRECT_TRUE,\n\tREDIRECT_FALSE,\n\tSET_MESSAGE,\n\tREMOVE_MESSAGE,\n\tSET_POSTS,\n\tSET_POST,\n\tPOST_REQUEST,\n\tEDIT_ERRORS,\n\tSET_UPDATE_ERRORS,\n\tUPDATE_IMAGE_ERROR,\n\tSET_DETAILS,\n\tCOMMENTS,\n} from '../types/PostTypes';\n\nexport const createAction = (postData) => {\n\treturn async (dispatch, getState) => {\t\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t//\tconsole.log(token)\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t\t// onUploadProgress: (data) => {\n\n\t\t\t\t// \tconsole.log(\n\t\t\t\t// \t\t'Your image upload progress: ',\n\t\t\t\t// \t\tMath.round((100 * data.loaded) / data.total)\n\t\t\t\t// \t);\n\t\t\t\t// },\n\t\t\t};\n\t\t\tconst {\n\t\t\t\tdata: { msg },\n\t\t\t} = await axios.post('/create_post', postData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: REMOVE_ERRORS });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: msg });\n\t\t} catch (error) {\n\t\t\tconsole.log(error.response);\n\t\t\tconst { errors } = error.response.data;\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: CREATE_ERRORS, payload: errors });\n\t\t}\n\t};\n};\nexport const fetchPosts = (id, page) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\t\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t};\n\t\t\t//console.log(\"PostMethods\"+id)\n\t\t\tconst {\n\t\t\t\tdata: { response, count, perPage },\n\t\t\t} = await axios.get(`/posts/${id}/${page}`, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_POSTS, payload: { response, count, perPage } });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t}\n\t};\n};\nexport const fetchPost = (id) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { post },\n\t\t\t} = await axios.get(`/post/${id}`, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_POST, payload: post });\n\t\t\tdispatch({ type: POST_REQUEST });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(error.message);\n\t\t}\n\t};\n};\nexport const updateAction = (editData) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/update', editData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: data.msg });\n\t\t} catch (error) {\n\t\t\tconsole.log(error.data);\n\t\t\tconst {\n\t\t\t\tresponse: {\n\t\t\t\t\tdata: { errors },\n\t\t\t\t},\n\t\t\t} = error;\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_UPDATE_ERRORS, payload: errors });\n\t\t\tconsole.log(error.response);\n\t\t}\n\t};\n};\n\nexport const updateImageAction = (updateData) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { msg },\n\t\t\t} = await axios.post('/updateImage', updateData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: REDIRECT_TRUE });\n\t\t\tdispatch({ type: SET_MESSAGE, payload: msg });\n\t\t} catch (error) {\n\t\t\tconst {\n\t\t\t\tresponse: {\n\t\t\t\t\tdata: { errors },\n\t\t\t\t},\n\t\t\t} = error;\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: UPDATE_IMAGE_ERROR, payload: errors });\n\t\t}\n\t};\n};\nexport const homePosts = (page) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { response, count, perPage },\n\t\t\t} = await axios.get(`/home/${page}`);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_POSTS, payload: { response, count, perPage } });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\nexport const postDetails = (id) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst {\n\t\t\t\tdata: { post, comments },\n\t\t\t} = await axios.get(`/explore/${id}`);\n\t\t\t//console.log(\"explore\"+{post});\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tdispatch({ type: SET_DETAILS, payload: post });\n\t\t\tdispatch({ type: COMMENTS, payload: comments });\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\nexport const postComment = (commentData) => {\n\treturn async (dispatch, getState) => {\n\t\tconst {\n\t\t\tAuthReducer: { token },\n\t\t} = getState();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t},\n\t\t};\n\t\tdispatch({ type: SET_LOADER });\n\t\ttry {\n\t\t\tconst { data } = await axios.post('/comment', commentData, config);\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(data);\n\t\t} catch (error) {\n\t\t\tdispatch({ type: CLOSE_LOADER });\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\types\\ProfileTypes.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\types\\UserTypes.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\types\\PostTypes.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\components\\Comments.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\reducers\\PostReducer.js",["180"],"import {\n\tSET_LOADER,\n\tCLOSE_LOADER,\n\tCREATE_ERRORS,\n\tREMOVE_ERRORS,\n\tREDIRECT_TRUE,\n\tREDIRECT_FALSE,\n\tSET_MESSAGE,\n\tREMOVE_MESSAGE,\n\tSET_POSTS,\n\tSET_POST,\n\tPOST_REQUEST,\n\tPOST_RESET,\n\tRESET_UPDATE,\n\tSET_UPDATE_ERRORS,\n\tRESET_UPDATE_ERRORS,\n\tUPDATE_IMAGE_ERROR,\n\tRESET_UPDATE_IMAGE_ERRORS,\n\tSET_DETAILS,\n\tCOMMENTS,\n} from '../types/PostTypes';\nconst initState = {\n\tloading: false,\n\tcreateErrors: [],\n\tredirect: false,\n\tmessage: '',\n\tposts: [],\n\tperPage: 0,\n\tcount: 0,\n\tpost: {},\n\tpostStatus: false,\n\teditErrors: [],\n\tupdateImageErrors: [],\n\tdetails: {},\n\tcomments: [],\n};\nexport const PostReducer = (state = initState, action) => {\n\tconst { type, payload } = action;\n\tif (type === SET_LOADER) {\n\t\treturn { ...state, loading: true };\n\t} else if (type === CLOSE_LOADER) {\n\t\treturn { ...state, loading: false };\n\t} else if (type === CREATE_ERRORS) {\n\t\treturn { ...state, createErrors: payload };\n\t} else if (type === REDIRECT_TRUE) {\n\t\treturn { ...state, redirect: true };\n\t} else if (type === REDIRECT_FALSE) {\n\t\treturn { ...state, redirect: false };\n\t} else if (type === SET_MESSAGE) {\n\t\treturn { ...state, message: action.payload };\n\t} else if (type === REMOVE_MESSAGE) {\n\t\treturn { ...state, message: '' };\n\t} else if (type === REMOVE_ERRORS) {\n\t\treturn { ...state, createErrors: [] };\n\t} else if (type === SET_DETAILS) {\n\t //\tconsole.log(payload.userId.name)\n\t\treturn { ...state, details: payload };\n\t} else if (type === COMMENTS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tcomments: payload,\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n};\nexport const FetchPosts = (state = initState, action) => {\n\tconst { type, payload } = action;\n\tif (type === SET_POSTS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tposts: payload.response,\n\t\t\tcount: payload.count,\n\t\t\tperPage: payload.perPage,\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n};\nexport const FetchPost = (state = initState, action) => {\n\tconst { type, payload } = action;\n\tif (type === SET_POST) {\n\t\treturn { ...state, post: payload };\n\t} else if (type === POST_REQUEST) {\n\t\treturn { ...state, postStatus: true };\n\t} else if (type === POST_RESET) {\n\t\treturn { ...state, postStatus: false };\n\t} else {\n\t\treturn state;\n\t}\n};\nexport const UpdatePost = (state = initState, action) => {\n\tconst { type, payload } = action;\n\tif (type === SET_UPDATE_ERRORS) {\n\t\treturn { ...state, editErrors: payload };\n\t} else if (type === RESET_UPDATE_ERRORS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\teditErrors: [],\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n};\nexport const UpdateImage = (state = initState, action) => {\n\tconst { payload, type } = action;\n\tif (type === UPDATE_IMAGE_ERROR) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdateImageErrors: payload,\n\t\t};\n\t} else if (type === RESET_UPDATE_IMAGE_ERRORS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdateImageErrors: [],\n\t\t};\n\t} else {\n\t\treturn state;\n\t}\n};\n","D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\reducers\\AuthReducer.js",[],"D:\\Downloads\\Youtube-Mern-Stack-Blog-main\\Youtube-Mern-Stack-Blog-main\\server\\client\\src\\store\\reducers\\ProfileReducer.js",[],{"ruleId":"181","severity":1,"message":"182","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":10},{"ruleId":"185","severity":1,"message":"186","line":21,"column":5,"nodeType":"187","endLine":21,"endColumn":11,"suggestions":"188"},{"ruleId":"181","severity":1,"message":"189","line":17,"column":10,"nodeType":"183","messageId":"184","endLine":17,"endColumn":17},{"ruleId":"185","severity":1,"message":"190","line":26,"column":5,"nodeType":"187","endLine":26,"endColumn":7,"suggestions":"191"},{"ruleId":"185","severity":1,"message":"186","line":32,"column":5,"nodeType":"187","endLine":32,"endColumn":19,"suggestions":"192"},{"ruleId":"185","severity":1,"message":"193","line":37,"column":5,"nodeType":"187","endLine":37,"endColumn":15,"suggestions":"194"},{"ruleId":"185","severity":1,"message":"195","line":63,"column":5,"nodeType":"187","endLine":63,"endColumn":14,"suggestions":"196"},{"ruleId":"185","severity":1,"message":"197","line":66,"column":5,"nodeType":"187","endLine":66,"endColumn":11,"suggestions":"198"},{"ruleId":"181","severity":1,"message":"199","line":9,"column":9,"nodeType":"183","messageId":"184","endLine":9,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":45,"column":5,"nodeType":"187","endLine":45,"endColumn":24,"suggestions":"200"},{"ruleId":"185","severity":1,"message":"193","line":50,"column":5,"nodeType":"187","endLine":50,"endColumn":15,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":84,"column":32,"nodeType":"204","endLine":84,"endColumn":64},{"ruleId":"181","severity":1,"message":"205","line":11,"column":2,"nodeType":"183","messageId":"184","endLine":11,"endColumn":14},{"ruleId":"185","severity":1,"message":"206","line":39,"column":5,"nodeType":"187","endLine":39,"endColumn":11,"suggestions":"207"},{"ruleId":"185","severity":1,"message":"186","line":56,"column":5,"nodeType":"187","endLine":56,"endColumn":17,"suggestions":"208"},{"ruleId":"185","severity":1,"message":"193","line":62,"column":5,"nodeType":"187","endLine":62,"endColumn":15,"suggestions":"209"},{"ruleId":"185","severity":1,"message":"193","line":90,"column":5,"nodeType":"187","endLine":90,"endColumn":29,"suggestions":"210"},{"ruleId":"202","severity":1,"message":"203","line":193,"column":28,"nodeType":"204","endLine":193,"endColumn":54},{"ruleId":"185","severity":1,"message":"186","line":29,"column":5,"nodeType":"187","endLine":29,"endColumn":9,"suggestions":"211"},{"ruleId":"185","severity":1,"message":"186","line":39,"column":5,"nodeType":"187","endLine":39,"endColumn":19,"suggestions":"212"},{"ruleId":"185","severity":1,"message":"193","line":44,"column":5,"nodeType":"187","endLine":44,"endColumn":15,"suggestions":"213"},{"ruleId":"181","severity":1,"message":"214","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":18},{"ruleId":"181","severity":1,"message":"215","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":15},{"ruleId":"181","severity":1,"message":"216","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":21},{"ruleId":"181","severity":1,"message":"215","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":15},{"ruleId":"185","severity":1,"message":"186","line":30,"column":5,"nodeType":"187","endLine":30,"endColumn":18,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":19,"column":30,"nodeType":"220","messageId":"221","endLine":19,"endColumn":32},{"ruleId":"181","severity":1,"message":"222","line":9,"column":2,"nodeType":"183","messageId":"184","endLine":9,"endColumn":22},{"ruleId":"181","severity":1,"message":"223","line":21,"column":12,"nodeType":"183","messageId":"184","endLine":21,"endColumn":16},{"ruleId":"181","severity":1,"message":"224","line":8,"column":2,"nodeType":"183","messageId":"184","endLine":8,"endColumn":16},{"ruleId":"181","severity":1,"message":"225","line":10,"column":2,"nodeType":"183","messageId":"184","endLine":10,"endColumn":16},{"ruleId":"181","severity":1,"message":"226","line":14,"column":2,"nodeType":"183","messageId":"184","endLine":14,"endColumn":13},{"ruleId":"181","severity":1,"message":"205","line":14,"column":2,"nodeType":"183","messageId":"184","endLine":14,"endColumn":14},"no-unused-vars","'PF' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["227"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["228"],["229"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'dispatch' and 'redirect'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["232"],"'val' is assigned a value but never used.",["233"],["234"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RESET_UPDATE' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'postStatus'. Either include them or remove the dependency array.",["235"],["236"],["237"],["238"],["239"],["240"],["241"],"'Children' is defined but never used.","'Route' is defined but never used.","'useNavigate' is defined but never used.",["242"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'RESET_PROFILE_ERRORS' is defined but never used.","'data' is assigned a value but never used.","'REDIRECT_FALSE' is defined but never used.","'REMOVE_MESSAGE' is defined but never used.","'EDIT_ERRORS' is defined but never used.",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"249","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"249","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"247","fix":"267"},{"desc":"249","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [dispatch, page]",{"range":"271","text":"272"},"Update the dependencies array to be: [name]",{"range":"273","text":"274"},"Update the dependencies array to be: [dispatch, updateErrors]",{"range":"275","text":"276"},"Update the dependencies array to be: [navigate, redirect]",{"range":"277","text":"278"},"Update the dependencies array to be: [dispatch, message, redirect]",{"range":"279","text":"280"},"Update the dependencies array to be: [dispatch, page, userId]",{"range":"281","text":"282"},"Update the dependencies array to be: [dispatch, updateImageErrors]",{"range":"283","text":"284"},{"range":"285","text":"278"},"Update the dependencies array to be: [dispatch, id, post, postStatus]",{"range":"286","text":"287"},"Update the dependencies array to be: [dispatch, editErrors]",{"range":"288","text":"289"},{"range":"290","text":"278"},"Update the dependencies array to be: [createErrors, navigate, redirect]",{"range":"291","text":"292"},"Update the dependencies array to be: [dispatch, id]",{"range":"293","text":"294"},{"range":"295","text":"276"},{"range":"296","text":"278"},"Update the dependencies array to be: [dispatch, loginErrors]",{"range":"297","text":"298"},[750,756],"[dispatch, page]",[962,964],"[name]",[1130,1144],"[dispatch, updateErrors]",[1219,1229],"[navigate, redirect]",[1726,1735],"[dispatch, message, redirect]",[1799,1805],"[dispatch, page, userId]",[1464,1483],"[dispatch, updateImageErrors]",[1557,1567],[1229,1235],"[dispatch, id, post, postStatus]",[1587,1599],"[dispatch, editErrors]",[1716,1726],[2593,2617],"[createErrors, navigate, redirect]",[1007,1011],"[dispatch, id]",[1203,1217],[1292,1302],[901,914],"[dispatch, loginErrors]"]